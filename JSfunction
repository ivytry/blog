
【截取字符串】
1、stringObject.slice(start,end)
  返回一个新的字符串。
  包括字符串 stringObject 从 start 开始（包括 start）到 end 结束（不包括 end）为止的所有字符。
  
2、stringObject.substring(start,stop)
  返回一个新的字符串。
  该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。
  如果参数 start 与 stop 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。如果 start 比 stop 大，那么该方法在提取子串之前会先交换这两个参数。
  与 slice() 和 substr() 方法不同的是，substring() 不接受负的参数。
  
3、stringObject.substr(start,length)
  返回一个新的字符串。
  包含从 stringObject 的 start（包括 start） 处开始的 length 个字符。
  如果没有指定 length，那么返回的字符串包含从 start 到 stringObject 的结尾的字符。
  ECMAscript 没有对该方法进行标准化，因此反对使用它。
  
  
  
【字符串编码】
1、encodeURIComponent(URIstring)
  把字符串作为 URI 组件进行编码。
  返回 URIstring 的副本，其中的某些字符将被十六进制的转义序列进行替换。
  该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： - * . _ ( ) ~ ! '
  
2、encodeURI(URIstring)
  把字符串作为 URI 进行编码。
  返回URIstring 的副本，其中的某些字符将被十六进制的转义序列进行替换。
  该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： + - * / . _ @ = , : ; ? $ & # ( ) ~ ! '
  
3、escape(string)
  对字符串进行编码，这样就可以在所有的计算机上读取该字符串。
  返回已编码的 string 的副本。其中某些字符被替换成了十六进制的转义序列。
  该方法不会对 ASCII 字母和数字进行编码，也不会对下面这些 ASCII 标点符号进行编码： + - * / . _ @
  ECMAScript v3 反对使用该方法。

  
  
【字符串解码】
1、decodeURIComponent(URIstring)
  对 encodeURIComponent() 函数编码的 URI 进行解码。
  返回 URIstring 的副本，其中的十六进制转义序列将被它们表示的字符替换。

2、decodeURI(URIstring)
  对 encodeURI() 函数编码过的 URI 进行解码。
  返回 URIstring 的副本，其中的十六进制转义序列将被它们表示的字符替换。
  
3、unescape(string)
  对通过 escape() 编码的字符串进行解码。返回 string 被解码后的一个副本。
  原理：通过找到形式为 %xx 和 %uxxxx 的字符序列（x 表示十六进制的数字），用 Unicode 字符 \u00xx 和 \uxxxx 替换这样的字符序列进行解码。
  ECMAScript v3 已从标准中删除了 unescape() 函数，并反对使用它，因此应该用 decodeURI() 和 decodeURIComponent() 取而代之。
  
  
  
  
  
